openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: http://localhost:5000
info:
  description: AutoDS test assignment
  version: "1.0.0"
  title: AutoDS test assignment
  contact:
    email: dremdem@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /movie:
    post:
      description: Adds a movie to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieCreateItem'
        description: Inventory item to add
      responses:
        '201':
          description: movie created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing movie already exists
  /movie/{movie_id}:
    put:
      description: Update a movie in the system
      parameters:
        - in: path
          name: movie_id
          schema:
            type: integer
          required: true
          description: Numeric id of the Movie to update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieUpdateItem'
        description: Inventory item to add
      responses:
        '200':
          description: movie updated
    delete:
      description: Delete a movie in the system
      parameters:
        - in: path
          name: movie_id
          schema:
            type: integer
          required: true
          description: Numeric id of the Movie to delete
      responses:
        '200':
          description: movie deleted
  /report:
    get:
      description: |
        get a list of actors aggregated by the years of release
        of the films in which he starred, with the number of films released this year
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
components:
  schemas:
    MovieBaseItem:
      type: object
      properties:
        title:
          type: string
          example: After Dark in Central Park
        year:
          type: integer
          format: int64
          example: 1900
        cast:
          type: array
          items:
            type: integer
            example: 123
        genres:
          type: array
          items:
            type: integer
            example: 234
    MovieCreateItem:
      allOf:
        - $ref: '#/components/schemas/MovieBaseItem'
        - type: object
          required:
            - title
            - year
    MovieUpdateItem:
      allOf:
        - $ref: '#/components/schemas/MovieBaseItem'
        - type: object
          required:
            - title
            - year
          minProperties: 1
    Report:
      type: array
      items:
        type: object
        required:
          - actor_name
          - year
          - number_of_movies
        properties:
          actor_name:
            type: string
            example: Irene Dunne
          year:
            type: integer
            format: int64
            example: 2020
          number_of_movies:
            type: integer
            format: int64
            example: 5
